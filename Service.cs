//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Runtime.Serialization;

// 
// This code was auto-generated by SlSvcUtil, version 5.0.61118.0
// 


[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
[System.Runtime.Serialization.DataContractAttribute(Name="SpacePart", Namespace="http://schemas.datacontract.org/2004/07/")]
public partial class SpacePart : object
{
    
    private double Amound_SoldField;
    
    private double Cost_Price_AllField;
    
    private double Cost_Price_UnitField;
    
    private string Count1Field;
    
    private string Count2Field;
    
    private string Count3Field;
    
    private System.DateTime Date_Count_StockField;
    
    private string Group_ItemField;
    
    private string ID_ItemField;
    
    private double Inventory_Last_MonthField;
    
    private string Name_ItemField;
    
    private double Number_Parts_BookingField;
    
    private string Self_MainField;
    
    private string Self_TryField;
    
    private double Sell_Price_AllField;
    
    private double Sell_Price_UnitField;
    
    private double Total_StockField;
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public double Amound_Sold
    {
        get
        {
            return this.Amound_SoldField;
        }
        set
        {
            this.Amound_SoldField = value;
        }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public double Cost_Price_All
    {
        get
        {
            return this.Cost_Price_AllField;
        }
        set
        {
            this.Cost_Price_AllField = value;
        }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public double Cost_Price_Unit
    {
        get
        {
            return this.Cost_Price_UnitField;
        }
        set
        {
            this.Cost_Price_UnitField = value;
        }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string Count1
    {
        get
        {
            return this.Count1Field;
        }
        set
        {
            this.Count1Field = value;
        }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string Count2
    {
        get
        {
            return this.Count2Field;
        }
        set
        {
            this.Count2Field = value;
        }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string Count3
    {
        get
        {
            return this.Count3Field;
        }
        set
        {
            this.Count3Field = value;
        }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public System.DateTime Date_Count_Stock
    {
        get
        {
            return this.Date_Count_StockField;
        }
        set
        {
            this.Date_Count_StockField = value;
        }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string Group_Item
    {
        get
        {
            return this.Group_ItemField;
        }
        set
        {
            this.Group_ItemField = value;
        }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string ID_Item
    {
        get
        {
            return this.ID_ItemField;
        }
        set
        {
            this.ID_ItemField = value;
        }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public double Inventory_Last_Month
    {
        get
        {
            return this.Inventory_Last_MonthField;
        }
        set
        {
            this.Inventory_Last_MonthField = value;
        }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string Name_Item
    {
        get
        {
            return this.Name_ItemField;
        }
        set
        {
            this.Name_ItemField = value;
        }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public double Number_Parts_Booking
    {
        get
        {
            return this.Number_Parts_BookingField;
        }
        set
        {
            this.Number_Parts_BookingField = value;
        }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string Self_Main
    {
        get
        {
            return this.Self_MainField;
        }
        set
        {
            this.Self_MainField = value;
        }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string Self_Try
    {
        get
        {
            return this.Self_TryField;
        }
        set
        {
            this.Self_TryField = value;
        }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public double Sell_Price_All
    {
        get
        {
            return this.Sell_Price_AllField;
        }
        set
        {
            this.Sell_Price_AllField = value;
        }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public double Sell_Price_Unit
    {
        get
        {
            return this.Sell_Price_UnitField;
        }
        set
        {
            this.Sell_Price_UnitField = value;
        }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public double Total_Stock
    {
        get
        {
            return this.Total_StockField;
        }
        set
        {
            this.Total_StockField = value;
        }
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IService")]
public interface IService
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/selectSpacePart", ReplyAction="http://tempuri.org/IService/selectSpacePartResponse")]
    System.IAsyncResult BeginselectSpacePart(string self_main, string date_count_stock, int id_brach, int round_count, System.AsyncCallback callback, object asyncState);
    
    SpacePart[] EndselectSpacePart(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/updateDetail_CountStock", ReplyAction="http://tempuri.org/IService/updateDetail_CountStockResponse")]
    System.IAsyncResult BeginupdateDetail_CountStock(string id_item, int round_count, int id_brach, string date_count_stock, int count_value, System.AsyncCallback callback, object asyncState);
    
    int EndupdateDetail_CountStock(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IServiceChannel : IService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class selectSpacePartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public selectSpacePartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public SpacePart[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((SpacePart[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class updateDetail_CountStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public updateDetail_CountStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public int Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ServiceClient : System.ServiceModel.ClientBase<IService>, IService
{
    
    private BeginOperationDelegate onBeginselectSpacePartDelegate;
    
    private EndOperationDelegate onEndselectSpacePartDelegate;
    
    private System.Threading.SendOrPostCallback onselectSpacePartCompletedDelegate;
    
    private BeginOperationDelegate onBeginupdateDetail_CountStockDelegate;
    
    private EndOperationDelegate onEndupdateDetail_CountStockDelegate;
    
    private System.Threading.SendOrPostCallback onupdateDetail_CountStockCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public ServiceClient()
    {
    }
    
    public ServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<selectSpacePartCompletedEventArgs> selectSpacePartCompleted;
    
    public event System.EventHandler<updateDetail_CountStockCompletedEventArgs> updateDetail_CountStockCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IService.BeginselectSpacePart(string self_main, string date_count_stock, int id_brach, int round_count, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginselectSpacePart(self_main, date_count_stock, id_brach, round_count, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    SpacePart[] IService.EndselectSpacePart(System.IAsyncResult result)
    {
        return base.Channel.EndselectSpacePart(result);
    }
    
    private System.IAsyncResult OnBeginselectSpacePart(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string self_main = ((string)(inValues[0]));
        string date_count_stock = ((string)(inValues[1]));
        int id_brach = ((int)(inValues[2]));
        int round_count = ((int)(inValues[3]));
        return ((IService)(this)).BeginselectSpacePart(self_main, date_count_stock, id_brach, round_count, callback, asyncState);
    }
    
    private object[] OnEndselectSpacePart(System.IAsyncResult result)
    {
        SpacePart[] retVal = ((IService)(this)).EndselectSpacePart(result);
        return new object[] {
                retVal};
    }
    
    private void OnselectSpacePartCompleted(object state)
    {
        if ((this.selectSpacePartCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.selectSpacePartCompleted(this, new selectSpacePartCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void selectSpacePartAsync(string self_main, string date_count_stock, int id_brach, int round_count)
    {
        this.selectSpacePartAsync(self_main, date_count_stock, id_brach, round_count, null);
    }
    
    public void selectSpacePartAsync(string self_main, string date_count_stock, int id_brach, int round_count, object userState)
    {
        if ((this.onBeginselectSpacePartDelegate == null))
        {
            this.onBeginselectSpacePartDelegate = new BeginOperationDelegate(this.OnBeginselectSpacePart);
        }
        if ((this.onEndselectSpacePartDelegate == null))
        {
            this.onEndselectSpacePartDelegate = new EndOperationDelegate(this.OnEndselectSpacePart);
        }
        if ((this.onselectSpacePartCompletedDelegate == null))
        {
            this.onselectSpacePartCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnselectSpacePartCompleted);
        }
        base.InvokeAsync(this.onBeginselectSpacePartDelegate, new object[] {
                    self_main,
                    date_count_stock,
                    id_brach,
                    round_count}, this.onEndselectSpacePartDelegate, this.onselectSpacePartCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IService.BeginupdateDetail_CountStock(string id_item, int round_count, int id_brach, string date_count_stock, int count_value, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginupdateDetail_CountStock(id_item, round_count, id_brach, date_count_stock, count_value, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    int IService.EndupdateDetail_CountStock(System.IAsyncResult result)
    {
        return base.Channel.EndupdateDetail_CountStock(result);
    }
    
    private System.IAsyncResult OnBeginupdateDetail_CountStock(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string id_item = ((string)(inValues[0]));
        int round_count = ((int)(inValues[1]));
        int id_brach = ((int)(inValues[2]));
        string date_count_stock = ((string)(inValues[3]));
        int count_value = ((int)(inValues[4]));
        return ((IService)(this)).BeginupdateDetail_CountStock(id_item, round_count, id_brach, date_count_stock, count_value, callback, asyncState);
    }
    
    private object[] OnEndupdateDetail_CountStock(System.IAsyncResult result)
    {
        int retVal = ((IService)(this)).EndupdateDetail_CountStock(result);
        return new object[] {
                retVal};
    }
    
    private void OnupdateDetail_CountStockCompleted(object state)
    {
        if ((this.updateDetail_CountStockCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.updateDetail_CountStockCompleted(this, new updateDetail_CountStockCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void updateDetail_CountStockAsync(string id_item, int round_count, int id_brach, string date_count_stock, int count_value)
    {
        this.updateDetail_CountStockAsync(id_item, round_count, id_brach, date_count_stock, count_value, null);
    }
    
    public void updateDetail_CountStockAsync(string id_item, int round_count, int id_brach, string date_count_stock, int count_value, object userState)
    {
        if ((this.onBeginupdateDetail_CountStockDelegate == null))
        {
            this.onBeginupdateDetail_CountStockDelegate = new BeginOperationDelegate(this.OnBeginupdateDetail_CountStock);
        }
        if ((this.onEndupdateDetail_CountStockDelegate == null))
        {
            this.onEndupdateDetail_CountStockDelegate = new EndOperationDelegate(this.OnEndupdateDetail_CountStock);
        }
        if ((this.onupdateDetail_CountStockCompletedDelegate == null))
        {
            this.onupdateDetail_CountStockCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnupdateDetail_CountStockCompleted);
        }
        base.InvokeAsync(this.onBeginupdateDetail_CountStockDelegate, new object[] {
                    id_item,
                    round_count,
                    id_brach,
                    date_count_stock,
                    count_value}, this.onEndupdateDetail_CountStockDelegate, this.onupdateDetail_CountStockCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override IService CreateChannel()
    {
        return new ServiceClientChannel(this);
    }
    
    private class ServiceClientChannel : ChannelBase<IService>, IService
    {
        
        public ServiceClientChannel(System.ServiceModel.ClientBase<IService> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginselectSpacePart(string self_main, string date_count_stock, int id_brach, int round_count, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[4];
            _args[0] = self_main;
            _args[1] = date_count_stock;
            _args[2] = id_brach;
            _args[3] = round_count;
            System.IAsyncResult _result = base.BeginInvoke("selectSpacePart", _args, callback, asyncState);
            return _result;
        }
        
        public SpacePart[] EndselectSpacePart(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            SpacePart[] _result = ((SpacePart[])(base.EndInvoke("selectSpacePart", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginupdateDetail_CountStock(string id_item, int round_count, int id_brach, string date_count_stock, int count_value, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[5];
            _args[0] = id_item;
            _args[1] = round_count;
            _args[2] = id_brach;
            _args[3] = date_count_stock;
            _args[4] = count_value;
            System.IAsyncResult _result = base.BeginInvoke("updateDetail_CountStock", _args, callback, asyncState);
            return _result;
        }
        
        public int EndupdateDetail_CountStock(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            int _result = ((int)(base.EndInvoke("updateDetail_CountStock", _args, result)));
            return _result;
        }
    }
}
